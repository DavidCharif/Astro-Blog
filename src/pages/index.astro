---
import BaseLayout from "../layouts/BaseLayout.astro";
import Greeting from "../components/Greeting.jsx";
import { getCollection } from "astro:content";
import BlogPost from "../components/BlogPost.astro";

import HomeArticles from "../components/HomeArticles";
const pageTitle = "Home Page";
const allPosts = await getCollection("posts");

let innerArray = [];
let outerArray = [];
// This is the function that creates a sub array of arrays with one array
for (let i = 0; i < allPosts.length; i++) {
  // This is the condition that checks if the inner array has 6 elements
  if (innerArray.length === 6) {
    // This is the statement that pushes the inner array to the outer array
    outerArray.push(innerArray);
    // This is the statement that resets the inner array
    innerArray = [];
  }
  // This is the statement that pushes the current element to the inner array
  innerArray.push(allPosts[i]);
}
// This is the final check that pushes the remaining inner array if it is not empty
if (innerArray.length > 0) {
  outerArray.push(innerArray);
}
// This is the statement that logs the outer array to the console

---
<script >
  import { navigate } from 'astro:transitions/client';
  document.addEventListener('astro:page-load', () => {
  console.log('Script on index')
  const container = document.getElementById("blogHome");
  let index = 0; // the current focused post index
  const elements = container?.querySelectorAll(".blogPost"); // an array of elements with data-slug attribute
  console.log('elements', elements)
  let timer: ReturnType<typeof setTimeout> // a variable to store the timeout id
  container?.addEventListener("wheel", (event) => {
    event.preventDefault(); // prevent the default scrolling
    if (timer) {
      // clear the previous timeout if any
      clearTimeout(timer);
    }
    if (event.deltaY > 0) {
      // scroll down
      index++; // increment the index
      if (elements) {
        // use modulo to wrap the index around the length of the elements array
        index = (index + elements.length) % elements.length;
      }
    } else {
      // scroll up
      index--; // decrement the index
      if (elements) {
        // use modulo to wrap the index around the length of the elements array
        index = (index + elements.length) % elements.length;
      }
    }
    if (elements) {
      cleanClasses(elements)
      elements[index].classList.add('focus')
      elements[index].scrollIntoView({behavior: 'smooth', inline: 'center'}); // scroll the post into view
      timer = setTimeout(() => {
        // set a timeout to open the focused post after X milliseconds
        const url = elements[index].querySelector('button a')?.getAttribute("href") // get the url of the focused post
        console.log('url', url)
        navigate(url?.toString() ?? "")
       
      }, 1500); // replace X with the desired time in milliseconds
    }
  });

  function cleanClasses (elements: NodeListOf<Element> ) {
    elements.forEach(element => {
      element.classList?.remove('focus')
    })
  }
})
</script>

<BaseLayout pageTitle={pageTitle}>
  <div class="blogHome" id="blogHome">
    {outerArray.map((array, i) => (
      <div class="post-container">
        {array.map((post) => (
          <BlogPost
            key={post.slug} // make sure to use a unique key for each post
            url={`/Astro-Blog/posts/${post.slug}`}
            title={post.data.title}
            image={post.data.image}
            description={post.data.description}
            data-slug={post.slug} // add a data-slug attribute and use the slug prop as the value
          />
        ))}
      </div>
    ))}
  </div>
</BaseLayout>